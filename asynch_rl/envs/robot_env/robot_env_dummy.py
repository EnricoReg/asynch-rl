#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Created on Tue Dec 22 17:33:37 2020

@author: Enrico Regolin
"""

import gym


class RobotEnv(gym.Env):
    #metadata = {'render.modes': ['human']}

    #####################################################################################################
    def __init__(self):
        self.a = 0
        
    #####################################################################################################            
    def get_max_iterations(self):
        pass

    #####################################################################################################            
    def get_actions_structure(self):
        pass # implemented in wrapper

        
    #####################################################################################################            
    def get_observations_structure(self):
        pass


    #####################################################################################################            
    # this function returns a traditional control input to be used instead of the ML one
    def get_controller_input(self):
        pass

    #####################################################################################################            
    def step(self,action):
        return 0,0,0,{}
    
    #####################################################################################################
    def reset(self):
        pass
    
    #####################################################################################################    
    def render(self):
        pass